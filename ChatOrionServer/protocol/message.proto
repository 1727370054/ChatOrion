syntax = "proto3";

package message;

service VarifyService {
  rpc GetVarifyCode (GetVarifyReq) returns (GetVarifyRsp) {}
}

enum ErrorCode {
    Success = 0;            // 成功
    InvalidArgument = 1;    // 参数无效
    ServerNotFound = 2;     // 服务器未找到
    UidInvalid = 3;         // 用户ID无效
    TokenInvalid = 4;       // Token无效
    InternalError = 5;      // 内部错误
    ServerOffline = 6;      // 服务器离线
}

message GetVarifyReq {
  string email = 1;
}

message GetVarifyRsp {
  int32 error = 1;
  string email = 2;
  string code = 3;
}

message GetChatServerReq
{
  int32 uid = 1;
}

message GetChatServerRes
{
  int32 error = 1;
  string host = 2;
  int32 port = 3;
  string token = 4;
}

message LoginReq
{
  int32 uid = 1;
  string token= 2;
}

message LoginRsp
{
  int32 error = 1;
  int32 uid = 2;
  string token = 3;
}

message RegisterChatServerReq {
    string host = 1;
    string port = 2;
    string name = 3;
}

message HeartbeatReq {
    string name = 1;  // 服务器名称
}

message MessageRes {
    ErrorCode error = 1;
}

service StatusService
{
  rpc GetChatServer (GetChatServerReq) returns (GetChatServerRes);
  rpc Login(LoginReq) returns(LoginRsp);
  rpc RegisterChatServer (RegisterChatServerReq) returns (MessageRes) {}
  rpc Heartbeat (HeartbeatReq) returns (MessageRes) {}
}

message AddFriendReq {
  int32  applyuid = 1;
  string name = 2;
  string desc = 3;
  string icon = 4;
  string nick = 5;
  int32  sex = 6;
  int32  touid = 7;
}

message AddFriendRsp {
  int32 error = 1;
  int32 applyuid = 2;
  int32 touid = 3;
}

message RplyFriendReq {
  int32 rplyuid = 1;
  bool  agree = 2;
  int32 touid = 3;
}

message RplyFriendRsp {
  int32 error = 1;
  int32 rplyuid = 2;
  int32 touid = 3;
}

message SendChatMsgReq{
  int32 fromuid = 1;
  int32 touid = 2;
  string message = 3;
}

message SendChatMsgRsp{
  int32 error = 1;
  int32 fromuid = 2;
  int32 touid = 3;
}

message AuthFriendReq{
  int32 fromuid = 1;
  int32 touid = 2;
}

message AuthFriendRsp{
  int32 error = 1;
  int32 fromuid = 2;
  int32 touid = 3;
}

message TextChatMsgReq {
  int32 fromuid = 1;
  int32 touid = 2;
  string msgid = 3;
  string content = 4;
}

message TextChatMsgRsp {
  int32 error = 1;
  int32 fromuid = 2;
  int32 touid = 3; 
  string msgid = 4;
  string content = 5;
}

service ChatService {
  rpc NotifyAddFriend(AddFriendReq) returns (AddFriendRsp) {}
  rpc RplyAddFriend(RplyFriendReq) returns (RplyFriendRsp) {}
  rpc SendChatMsg(SendChatMsgReq) returns (SendChatMsgRsp) {}
  rpc NotifyAuthFriend(AuthFriendReq) returns (AuthFriendRsp) {}
  rpc NotifyTextChatMsg(TextChatMsgReq) returns (TextChatMsgRsp){}
}
